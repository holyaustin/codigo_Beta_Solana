cidl: "0.8"
info:
  name: budget_tracker
  title: Budget Tracker
  version: 0.0.1
  summary: |-
    The purpose of this contract is to track the income and outcome of a given user. For this contract, we are going to 
    target the Solana blockchain. Thus, we define the data structure **Record** that will be transpile to a PDA Account 
    base on the seeds defined in the solana extension. In addition, the contract defines three methods, also known as 
    instruction; through this method, we add behavior.
    
    Some useful links:
    
      - [Blockchain Extensions](https://docs.codigo.ai/category/blockchain-extensions)
      - [Learning the Basics](https://docs.codigo.ai/código-interface-description-language/learning-the-basics)
      - [Building Solana Program with CIDL: A Comprehensive Guide Part I](https://docs.codigo.ai/guides/part-1-building-solana-programs)
  contact:
    name: Código
    web: https://codigo.ai
    email: support@codigo.ai
    git: https://github.com/Codigo-io/examples
  license:
    name: MIT
    url: https://opensource.org/license/mit
types:
  Record:
    summary: Through this data structure we will store the relevant information to track the income and outcome of a given user.
    solana:
      owner: self
      seeds:
        - name: record
        - name: signer
          type: sol:pubkey
    fields:
      - name: name
        type: string
        solana:
          attributes: [ cap:50 ]
        description: The name of the user.
      - name: moves
        type: u16
        description: Number incomes/outcomes registered.
      - name: outcome
        type: u32
        description: Sum of all outcomes.
      - name: income
        type: u32
        description: Sum of all incomes.
      - name: total_balance
        type: i64
        description: The current balance of the user
        

      # TODO: 1 - Complete the definition of the Record data structure
      # Add the following fields
      #   - moves of type u16
      #   - outcome of type u32
      #   - income of type u32
      #   - total_balance of type i64
      
methods:
  - name: create_user_record
    summary: To call once per account. Initialize a Record account. The total_balance of the account will be set to 0.
    inputs:
      - name: user_record
        type: Record
        solana:
          attributes: [ mut, init_if_needed ]
      - name: user_name
        type: string
        description: The username to be assigned to the Record.name property
  - name: register_income
    summary: Register the given amount as an income for the given record account. The total total_balance of the account will be increased.
    inputs:
    - name: user_record
      type: Record
      solana:
        attributes: [ mut ]
    - name: amount
      type: u32
      description: The amount to be registered as the income.
  - name: register_outcome
    summary: Register the given amount as an outcome for the given record account. The total total_balance of the account will be decreased.
    inputs:
    - name: user_record
      type: Record
      description: The user record account
      solana:
        attributes: [ mut ]
    - name: amount
      type: u32
      description: Number to be added to the outcome accumulator


  # TODO: 2 - Define the register_income method
  #  - Add the following inputs
  #  - record of type Record, and the attribute mut
  #  - amount of type u32

  # TODO: 3 - Define the register_outcome method
  #  - Add the following inputs
  #  - record of type Record, and the attribute mut
  #  - amount of type u32